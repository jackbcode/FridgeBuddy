@model FridgeBuddy.Models.Fridge

@{
    ViewBag.Title = "Edit";
}

@{

    int daysLeft = ((Model.ExpiryDate - DateTime.Today).Days);
    string style = daysLeft <= -1 ? "background-color:#C39BD3" : daysLeft <= 0 ? "background-color:#F1948A" : daysLeft <= 1 ? "background-color:#F8C471" : daysLeft <= 2 ? "background-color:#F7DC6F" : daysLeft >= 2 ? "background-color:#82E0AA" : null;
}

<h2 class="sideTitle">Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
   
    <div class="form-horizontal">
        <p class="foodTitle">@Html.DisplayFor(model =>model.Item)<p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Item, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Item, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaysTillExpiry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2"  id="expDay">
                @Html.DisplayFor(model => (model.ExpiryDate - DateTime.Today).Days)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
